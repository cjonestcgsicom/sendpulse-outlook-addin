{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/sendpulse_api.ts","webpack:///./src/synchdialog.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","SendPulseClient","id","secret","baseurl","this","clientID","clientSecret","token","baseURL","getToken","callback","parameters","grant_type","client_id","client_secret","makeRequest","getAddressBooks","localStorage","getItem","url","getAddressBookContacts","bookID","addEmailsToAddressBook","emails","data","method","authorized","self","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","addEventListener","e","jsonResponse","parse","responseText","console","log","access_token","$","document","ready","hide","click","showLoginPopup","folder_index","val","selectedFolder","folders","accessToken","html","show","ajax","dataType","headers","Authorization","done","items","contacts","fail","error","status","getContacts","success","length","setItem","addressBookId","outlookContacts","sendPulseContacts","masterMode","Array","isArray","showAlert","counter_max","counter","forEach","contact","index","emailAddresses","email","address","toLowerCase","email_object","variables","firstName","lastName","givenName","surname","push","update_counter","sendPulseClient","_sendpulse_api__WEBPACK_IMPORTED_MODULE_0__","sendPulseID","sendPulseSecret","res","message","error_description","newMicosoftContact","GivenName","split","EmailAddresses","Address","Name","microsoftContact","duplicate","Email","isSendPulseContactDuplicated","type","contentType","Content-Type","item","addOutlookContact","syncContacts","dialog","Auth2AccountData","onStateChange","empty","folder","str","displayName","append","fullUrl","location","protocol","hostname","port","Office","context","ui","displayDialogAsync","height","width","result","addEventHandler","EventType","DialogMessageReceived","processMessage","DialogEventReceived","eventHandler","arg","messageFromPopupDialog","close","current_progress","Math","ceil","css","attr","text","removeItem","initialize","reason"],"mappings":"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","file":"synchdialog.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","class SendPulseClient {\n\n    private clientID: string = '';\n    private clientSecret: string = '';\n    public token: string = '';\n    public baseURL: string = '';\n\n    constructor (id: string, secret: string, baseurl: string) {\n        this.clientID = id;\n        this.clientSecret = secret;\n        this.token ='';\n        this.baseURL = baseurl;\n    }\n\n    getToken(callback) {\n\n        let parameters = {\n            'grant_type': 'client_credentials',\n            'client_id' : this.clientID,\n            'client_secret': this.clientSecret\n        };\n\n        //'https://api.sendpulse.com/oauth/access_token'\n        this.makeRequest(parameters, 'POST', this.baseURL + 'sendpulsetoken', false, callback);\n    }\n\n    getAddressBooks(callback){\n\n        this.token = localStorage.getItem(\"sendPulseToken\");\n        let parameters = {\n            'url': 'listAddressBooks',\n            'token': this.token\n        }\n        //' https://api.sendpulse.com/addressbooks'\n        this.makeRequest(parameters, 'POST', this.baseURL + 'sendpulse', true, callback);\n    }\n\n    getAddressBookContacts(bookID, callback) {\n\n        //'https://api.sendpulse.com/addressbooks/'+ bookID +'/emails';\n        this.token = localStorage.getItem(\"sendPulseToken\");\n        let parameters = {\n            'url': 'getEmailsFromBook',\n            'id' : bookID,\n            'token': this.token\n        }\n\n        this.makeRequest(parameters, 'POST', this.baseURL + 'sendpulse', true, callback);\n    }\n\n    addEmailsToAddressBook(bookID, emails, callback) {\n        this.token = localStorage.getItem(\"sendPulseToken\");\n        let parameters = {\n            'url': 'addEmails',\n            'id' : bookID,\n            'emails': emails,\n            'token': this.token\n        }\n\n        this.makeRequest(parameters, 'POST', this.baseURL + 'sendpulse', true, callback);\n    }\n\n    makeRequest(data, method: string, url: string, authorized: boolean, callback) {\n\n        let self = this;\n\n        var xhr = new XMLHttpRequest();\n        xhr.open(method, url, true);\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        if(authorized){\n            xhr.setRequestHeader('Authorization', 'Bearer ' + this.token);\n        }\n        xhr.send(JSON.stringify(data));\n\n        xhr.addEventListener('load', function(e) {\n            var jsonResponse = JSON.parse(xhr.responseText);\n            console.log(\"Response: \" + JSON.stringify(jsonResponse));\n\n            if(! (jsonResponse.access_token === null ))\n            {\n                console.log(\"Token: \" + jsonResponse.access_token);\n                self.token =  jsonResponse.access_token;\n            }\n            else {\n                console.log(\"Auth error: \" + JSON.stringify(jsonResponse));\n            }\n\n            callback(jsonResponse);\n\n        });\n\n\n    }\n\n}\n\nexport { SendPulseClient };","import {SendPulseClient} from './sendpulse_api';\n\n$(document).ready(() => {\n\n    $('#run').hide();\n    $('#run').click(run);\n\n    var Auth2AccountData = Auth2AccountData || {};\n    var dialog;\n    var contacts = [];\n    var folders = [];\n    var selectedFolder = {};\n    var baseURL = localStorage.getItem(\"baseURL\");\n    var sendPulseID = localStorage.getItem(\"sendPulseID\") || '';\n    var sendPulseSecret = localStorage.getItem(\"sendPulseSecret\") || '';\n\n    var counter_max = 0;\n    var counter = 0;\n\n    Auth2AccountData.secret = 'nnoHKD75!)gwzrSICW728?[';\n    Auth2AccountData.clientID = 'c80d93b6-a45b-405c-add9-388a25beadb9';\n\n// The Auth0 subdomain and client ID need to be shared with the popup dialog\n    localStorage.setItem('clientID', Auth2AccountData.clientID);\n    localStorage.setItem('secret', Auth2AccountData.secret);\n    localStorage.setItem('redirectURI', baseURL + 'function-file/function-file.html');\n    localStorage.removeItem('selectedMicrosoftContacts');\n\n    $('#sideload-msg').hide();\n    $('.alert').hide();\n    $('#progress_dynamics').hide();\n    $('#sync_div').hide();\n    $('#spinner').hide();\n    $('#app-body').show();\n    $('#run').hide();\n    $('.close').click((e)=>{\n        $('.alert').hide();\n    });\n    $('[data-dismiss]').click((e)=>{\n        $('.alert').hide();\n    });\n    onStateChange();\n\n// The initialize function must be run each time a new page is loaded\n    Office.initialize = (reason) => {\n        /*\n        $('#sideload-msg').hide();\n        $('.alert').hide();\n        $('#progress_dynamics').hide();\n        $('#sync_div').hide();\n        $('#spinner').hide();\n        $('#app-body').show();\n        $('#run').hide();\n        $('.close').click((e)=>{\n            $('.alert').hide();\n        });\n        $('[data-dismiss]').click((e)=>{\n            $('.alert').hide();\n        });\n        onStateChange();\n        */\n    };\n\n    //auth State's been changed so we just check if it is appropriate to get contacts and synch them\n    function onStateChange()\n    {\n        if ( localStorage.getItem(\"microsoftToken\") === null || typeof localStorage.getItem(\"microsoftToken\") === 'undefined' ) {\n            console.log(\"Still not authorized with Microsoft account\");\n            //$('#syncBtnTitle').html('Select Outlook Contacts Folder');\n            showLoginPopup();\n        }\n        else\n        {\n            console.log('Token we got: ' + localStorage.getItem(\"microsoftToken\"));\n            getFolders(localStorage.getItem(\"microsoftToken\"));\n        }\n\n    };\n\n    // Use the Office dialog API to open a pop-up and display the sign-in page for choosing an identity provider.\n    function showLoginPopup() {\n\n        // Create the popup URL and open it.\n        var fullUrl = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '') + '/popup.html';\n\n        // height and width are percentages of the size of the screen.\n        Office.context.ui.displayDialogAsync(fullUrl,\n            {height: 45, width: 55},\n            function (result) {\n                dialog = result.value;\n                dialog.addEventHandler(Office.EventType.DialogMessageReceived, processMessage);\n\n                /*Events are sent by the platform in response to user actions or errors. For example, the dialog is closed via the 'x' button*/\n                dialog.addEventHandler(Office.EventType.DialogEventReceived, eventHandler);\n            });\n    }\n\n// This handler responds to the success or failure message that the pop-up dialog receives from the identity provider.\n    function processMessage(arg) {\n        var messageFromPopupDialog = JSON.parse(arg.message);\n        console.log('Dialog sent a message: ' + JSON.stringify(messageFromPopupDialog));\n        if (messageFromPopupDialog === \"success\") {\n\n            // The Auth0 token has been received, so close the dialog, use\n            // the token to get user information, and redirect the task\n            // pane to the landing page.\n\n            dialog.close();\n            console.log(\"Auth2 response: \" + JSON.stringify(messageFromPopupDialog));\n\n        } else {\n\n            // Something went wrong with authentication or the authorization of the web application,\n            // either with Auth0 or with the provider.\n            dialog.close();\n            console.error(\"User authentication and application authorization\",\n                \"Unable to successfully authenticate user or authorize application: \" + messageFromPopupDialog.error);\n        }\n    }\n\n    //this handler reponds to whatever happened with auth dialog\n    // if dialog's been closed (itself or by user), onStateChange is called\n    function eventHandler(arg) {\n\n        // In addition to general system errors, there are 2 specific errors\n        // and one event that you can handle individually.\n        switch (arg.error) {\n            case 12002:\n                console.error(\"Cannot load URL, no such page or bad URL syntax.\");\n                break;\n            case 12003:\n                console.error(\"HTTPS is required.\");\n                break;\n            case 12006:\n                // The dialog was closed, typically because the user the pressed X button.\n                console.log(\"Dialog closed by user\");\n                onStateChange();\n                break;\n            default:\n                onStateChange();\n                console.error(\"Undefined error in dialog window\");\n                break;\n        }\n    }\n\n\n    //reload contacts list\n    function reloadFolders() {\n        $('#sync_div').show();\n        $(\"#foldersList\").empty();\n\n        if(Array.isArray(folders))\n        {\n            if(folders.length > 0)\n            {\n                folders.forEach((folder, index) => {\n                    var str = '<option ' + (index == 0 ? 'selected' : '') +'  value=\"' + index + '\"' +\n                        '>' + folder.displayName + '</option>';\n                    $(\"#foldersList\").append(str);\n                });\n            }\n        }\n\n    };\n\n    async function run() {\n        //if we're not authorized to token yet\n        if (localStorage.getItem(\"microsoftToken\") === null || typeof localStorage.getItem(\"microsoftToken\") === 'undefined') {\n            showLoginPopup();\n        }\n        else {\n            console.log('Token we got: ' + localStorage.getItem(\"microsoftToken\"));\n            //get Microsoft Acc contacts first\n            var folder_index =  $(\"#foldersList\").val();\n            selectedFolder = folders[folder_index];\n            console.log(\"ContactFolder selected: \" + folder_index );\n            //\n            getContacts(localStorage.getItem(\"microsoftToken\"), selectedFolder, (success) => {\n                if (contacts.length > 0)\n                {\n                    localStorage.setItem('selectedMicrosoftContacts', JSON.stringify(contacts));\n                }\n                else {\n                    console.log(\"No contacts selected to sync!\");\n                }\n                if(success){\n                    //here we got to start synching\n                    syncContacts();\n                }\n            });\n        }\n    };\n\n    /**\n    *\n    * synching contacts with given master mode (sendPulse of outlook)\n    * */\n    function syncContacts() {\n\n        //1) get the addressBook ID for SendPulse\n        let addressBookId = localStorage.getItem(\"bookID\");\n\n        //2) get the contacts from Outlook\n        let outlookContacts = contacts;\n\n        //3) get the contacts from Sendpulse\n        let sendPulseContacts = JSON.parse(localStorage.getItem(\"emailsSelected\"));\n\n        //4) the master mode (1 - import from SendPulse, 2 - export from Outlook)\n        let masterMode = localStorage.getItem(\"masterMode\");\n\n        //5) syncronize\n\n        //5.1 - when we export from outlook to sendPulse\n        if (masterMode === '2') {\n\n            if (!(Array.isArray(outlookContacts)) || outlookContacts.length === 0) {\n                showAlert(\"You don't have any Outlook contacts to eхport from selected folder!\");\n                return;\n            }\n\n            $('#spinner').show();\n            $('#run').hide();\n            $('#progress_dynamics').show();\n            counter_max = outlookContacts.length;\n            counter = 0;\n\n            var emails = [];\n            outlookContacts.forEach((contact, index) => {\n                contact.emailAddresses.forEach((email) => {\n                    if (email.address) {\n                        console.log(\"Outlook contact email : \" + JSON.stringify(email.address.toLowerCase()));\n                        let email_object = {\n                            'email': email.address.toLowerCase(),\n                            'variables': {'firstName': '', 'lastName': ''}\n                        };\n                        if(contact.givenName) {\n                            email_object.variables.firstName = contact.givenName;\n                        }\n                        if(contact.surname) {\n                            email_object.variables.lastName = contact.surname;\n                        }\n                        emails.push(email_object);\n                    }\n                });\n                update_counter();\n            });\n            let sendPulseClient = new SendPulseClient(sendPulseID, sendPulseSecret, baseURL);\n\n            sendPulseClient.addEmailsToAddressBook(addressBookId, emails, (res) => {\n                $('#spinner').hide();\n                $('#progress_dynamics').hide();\n                $('#run').show();\n                if (res.error) {\n                        showAlert(res.message ? res.message : res.error_description);\n                }\n                else {\n                    console.log(\"added contacts to sendpulse: \", emails.length);\n                }\n            });\n\n\n        } else //5.2 - when we import from sendPulse\n        if (masterMode === '1') {\n\n            console.log(\"Export from SendPulse\");\n            if (!(Array.isArray(sendPulseContacts)) || sendPulseContacts.length === 0) {\n                showAlert(\"You don't have any SendPulse emails to import!\");\n                return;\n            }\n            $('#spinner').show();\n            $('#run').hide();\n            $('#progress_dynamics').show();\n            counter_max = sendPulseContacts.length;\n            counter = 0;\n\n            sendPulseContacts.forEach((contact) => {\n                let newMicosoftContact = {\n                    \"GivenName\": contact[\"email\"].split(\"@\")[0],\n                    \"EmailAddresses\": [\n                        {\n                            \"Address\": contact[\"email\"],\n                            \"Name\":  contact[\"email\"].split(\"@\")[0]\n                        }\n                    ]\n                };\n\n                if(contact.variables)\n                {\n                    if(contact.variables.firstName)\n                    {\n                        newMicosoftContact.GivenName = contact.variables.firstName;\n                    }\n                    if(contact.variables.lastName)\n                    {\n                        newMicosoftContact[\"surname\"] = contact.variables.lastName;\n                    }\n                };\n\n                outlookContacts.forEach((microsoftContact) => {\n\n                    if (isSendPulseContactDuplicated(contact, microsoftContact)) {\n                       newMicosoftContact = null;\n                    }\n\n                });\n                if (newMicosoftContact != null) {\n                    addOutlookContact(localStorage.getItem(\"microsoftToken\"), selectedFolder, newMicosoftContact, (success) => {\n                        console.log(success);\n                        update_counter();\n                    });\n                }\n\n\n            });\n\n\n        }\n    }\n\n    function isSendPulseContactDuplicated(contact, microsoftContact) {\n        let duplicate = false;\n        microsoftContact.emailAddresses.forEach((email) => {\n           if(email.address && contact[\"email\"]) {\n               if (email.address.toLowerCase() === contact[\"email\"].toLowerCase()) {\n                   duplicate = true;\n                   console.log(\"Outlook contact email : \" + JSON.stringify(email.address.toLowerCase()));\n                   console.log(\"SP Contact email: \" + contact.Email.toLowerCase());\n                   return true;\n               }\n           }\n        });\n        return duplicate;\n    }\n\n\n    //show alert\n    function showAlert(message){\n        $('.alert').show();\n        $(\"#error_text\").html(message);\n    }\n\n    //update synched conteacts counter\n    function update_counter() {\n        counter += 1;\n        console.log(\"Counter: \" + counter + \" out of \" + counter_max);\n\n        //update progress\n        let current_progress = Math.ceil((counter * 100.0)/(counter_max * 1.0));\n        console.log(\"Progress: \" + current_progress);\n\n        $(\"#dynamic\")\n            .css(\"width\", current_progress + \"%\")\n            .attr(\"aria-valuenow\", current_progress)\n            .text(current_progress + \"% Complete\");\n\n        if(counter == counter_max){\n            $('#spinner').hide();\n            $('#run').show();\n            $('#progress_dynamics').hide();\n        }\n    };\n\n//microsoft Outlook Graph API ==========================================================================================\n\n    //get microsoft folders\n    function getFolders(accessToken) {\n\n        //$('#syncBtnTitle').html('Getting Outlok Folders...');\n        $('#run').hide();\n\n        $('#spinner').show();\n\n        $.ajax({\n            url: 'https://graph.microsoft.com/beta/me/contactFolders', //'https://graph.microsoft.com/v1.0/me/contacts',\n            dataType: 'json',\n            headers: { 'Authorization': 'Bearer ' + accessToken }\n        }).done(function(items){\n\n            console.log(\"Folders: \" + JSON.stringify(items));\n            folders = items.value;\n            reloadFolders();\n            //$('#syncBtnTitle').html('Refresh Outlook Folders');\n            $('#run').show();\n            $('#spinner').hide();\n        }).fail(function(error){\n            $('#spinner').hide();\n            console.log(\"Error: \" + JSON.stringify(error));\n            if(error.status)\n            {\n                $('#syncBtnTitle').html('Select Outlook Folders');\n                if(error.status != 200)\n                {\n                    showLoginPopup();\n                }\n            }\n        });\n\n    };\n\n    //get microsoft contacts\n    function getContacts(accessToken, selectedFolder, callback) {\n\n        $('#syncBtnTitle').html('Getting Outlook Folder Contacts...');\n        $('#run').hide();\n\n        $('#spinner').show();\n\n        $.ajax({\n            url: 'https://graph.microsoft.com/v1.0/me/contactfolders/' + selectedFolder.id + '/contacts', //'https://graph.microsoft.com/v1.0/me/contacts',\n            dataType: 'json',\n            headers: { 'Authorization': 'Bearer ' + accessToken }\n        }).done(function(items){\n\n            console.log(\"Contacts: \" + JSON.stringify(items));\n            contacts = items.value;\n            callback(true);\n            $('#syncBtnTitle').html('Synchronize');\n            $('#run').show();\n            $('#spinner').hide();\n\n        }).fail(function(error){\n\n            $('#spinner').hide();\n            console.log(\"Error: \" + JSON.stringify(error));\n            callback(false);\n            if(error.status)\n            {\n                $('#syncBtnTitle').html('Refresh Outlook Folders');\n                if(error.status != 200)\n                {\n                    showLoginPopup();\n                }\n            }\n        });\n\n    }\n\n    //create microsoft contact\n    function addOutlookContact(accessToken, selectedFolder, contact, callback) {\n\n        $.ajax({\n            url: 'https://graph.microsoft.com/v1.0/me/contactfolders/' + selectedFolder.id + '/contacts',\n            type: \"POST\",\n            contentType: \"application/json\",\n            data: JSON.stringify(contact),\n            headers: { 'Authorization': 'Bearer ' + accessToken,\n                'Content-Type': 'application/json' }\n        }).done(function(item){\n\n            console.log(\"Contact created: \" + JSON.stringify(item));\n            callback(true);\n\n        }).fail(function(error){\n            console.log(\"Error: \" + JSON.stringify(error));\n            callback(false);\n            if(error.status)\n            {\n                if(error.status != 200)\n                {\n\n                }\n            }\n        });\n\n    }\n\n//create microsoft contact\n    function updateOutlookContact(accessToken, selectedFolder, contact, callback) {\n\n        if(!contact.id)\n        {\n            console.error(\"Trying to update contact w/i id!\");\n            return;\n        }\n\n        var url = 'https://graph.microsoft.com/v1.0/me/contactfolders/' + selectedFolder.id + '/contacts/' + contact.id\n\n        $.ajax({\n            url: url,\n            dataType: 'json',\n            type: \"PATCH\",\n            contentType: \"application/json\",\n            data: JSON.stringify(contact),\n            headers: { 'Authorization': 'Bearer ' + accessToken,\n                'Content-Type': 'application/json' }\n        }).done(function(item){\n\n            console.log(\"Contact updated: \" + JSON.stringify(item));\n            callback(true);\n\n        }).fail(function(error){\n            console.log(\"Error: \" + JSON.stringify(error));\n            callback(false);\n            if(error.status)\n            {\n                if(error.status != 200)\n                {\n\n                }\n            }\n        });\n\n    }\n\n//=======================================================================================================================================\n\n\n\n});"],"sourceRoot":""}